"$schema" = 'https://starship.rs/config-schema.json'

command_timeout = 2000
format = """\
[╭╴](fg:arrow)\
$directory\
(\
    $kubernetes\
    $aws\
    $azure\
    $conda\
    $shlvl\
    $python\
    $terraform\
    $golang\
    $nodejs\
    $rust\
    $git_branch\
    $git_commit\
    $git_state\
    $git_metrics\
    $git_status\
    $hg_branch\
)\
$cmd_duration
[╰─](fg:arrow)$character\
"""

# Disables the blank line at the start of the prompt
add_newline = true

# To change the colors: change to the corresponding palette.
palette = "light"

[palettes.old]
arrow = "#FFFF00"
os = "#3778BF"
os_admin = "#6A040F"
directory = "#3F37C9"
time = "#177E89"
git = "#B02B10"
git_status = "#8B1D2C"
python = "#3776AB"
conda = "#3EB049"
rust = "#C33C00"
clang = "#1A4A96"
duration = "yellow"
text_color = "#EDF2F4"
text_light = "#EDF2F4"

[palettes.light]
arrow = "#674EA7"
os = "#F7768E"
os_admin = "#6A040F"
directory = "#674EA7"
time = "#674EA7"
git = "#674EA7"
git_status = "#674EA7"
python = "#F5CB5C"
conda = "#674EA7"
rust = "#C33C00"
clang = "#1A4A96"
duration = "#674EA7"
k8s = "#674EA7"
aws = "#674EA7"
azure = "#674EA7"
tf = "#674EA7"
go = "#674EA7"
nodejs = "#674EA7"
text_color = "#363636"
text_light = "#363636"

[palettes.normal]
arrow = "#353535"
os = "#F7768E"
os_admin = "#1A4A96"
directory = "#363636"
time = "#363636"
git = "#363636"
git_status = "#363636"
clang = "#363636"
python = "#363636"
conda = "#363636"
duration = "#D8DEE9"
text_color = "#26272A"
text_light = "#26272A"
k8s = "#363636"
aws = "#363636"
azure = "#363636"
tf = "#363636"
go = "#363636"
nodejs = "#363636"

[terraform]
format = '[ ](fg:tf)[$symbol tf:$version]($style)[](fg:tf)'
style = "fg:text_light bg:tf"
symbol = "󱁢 "
disabled = false

[golang]
format = '[ ](fg:go)[$symbol go:$version]($style)[](fg:go)'
style = "fg:text_light bg:go"
symbol = " "
disabled = false

[nodejs]
format = '[ ](fg:nodejs)[$symbol node:$version]($style)[](fg:nodejs)'
style = "fg:text_light bg:nodejs"
symbol = " "
disabled = false

[rust]
format = "[ ](fg:rust)[$symbol rust:$version](bg:rust fg:text_color)[](fg:rust)"
symbol = " "
version_format = "${raw}"
disabled = false

[username]
style_user = 'os'
style_root = 'os_admin'
format = '[]($style)[  $user](bg:$style fg:text_color)[]($style)'
disabled = false
show_always = true

[character]
success_symbol = "[➜](bold green)"
error_symbol = "[➜](bold red)"

[directory]
format = " [](fg:directory)[   $path]($style)[$read_only]($read_only_style)[](fg:directory)"
truncation_length = 3
style = "fg:text_color bg:directory"
read_only_style = "fg:text_color bg:directory"
before_repo_root_style = "fg:text_color bg:directory"
truncation_symbol = "…/"
truncate_to_repo = true
read_only = "  "

[directory.substitutions]
"Documents" = "󰈙 "
"Downloads" = " "
"Music" = "󰝚 "
"Pictures" = " "
"Developer" = "󰲋 "

[time]
disabled = false
format = " [](fg:time)[ $time]($style)[](fg:time)"
time_format = "%H:%M"
style = "fg:text_color bg:time"

[cmd_duration]
format = " [](fg:duration)[$duration]($style)[](fg:duration)"
style = "fg:text_light bg:duration"
min_time = 500

[git_branch]
format = " [](fg:git)[$symbol$branch](fg:text_light bg:git)[](fg:git)"
symbol = ""

[git_status]
format = '([ ](fg:git_status)[ $all_status$ahead_behind ]($style)[](fg:git_status))'
style = "fg:text_light bg:git_status"

[docker_context]
disabled = false
symbol = " "

[package]
disabled = false

[kubernetes]
style = "fg:text_light bg:k8s"
format = '[ ](fg:k8s)[$symbol cl:$cluster ns:$namespace]($style)[](fg:k8s)'
symbol = "☸ "
disabled = false

[python]
disabled = false
format = '[ ](fg:python)[${symbol}py:${version}(\($virtualenv\))]($style)[](fg:python)'
symbol = " "
version_format = "${raw}"
style = "fg:text_light bg:python"

[conda]
format = "[ ](fg:conda)[$symbol$environment]($style)[](fg:conda)"
style = "bg:conda fg:text_color"
ignore_base = false
disabled = false
symbol = " "

# Integrate your original AWS configuration with the new style
[aws]
style = "fg:text_color bg:aws"
format = "[ ](fg:aws)[$symbol$profile@$region]($style)[](fg:aws)"
symbol = "  "
force_display = false

[aws.region_aliases]
us-west-2    = "usw2"
us-west-1    = "usw1"
us-east-2    = "use2"
us-east-1    = "use1"
ca-central-1 = "ca"
eu-west-1    = "euw1"
eu-central-1 = "euc1"

[aws.profile_aliases]
petlab = "LABS"
security = "SEC"
management = "MGT"
prod = "PROD"
logging = "LOG"

# Integrate your original Azure configuration
[azure]
style = "fg:text_color bg:azure"
format = "[ ](fg:azure)[$symbol$subscription]($style)[](fg:azure)"
symbol = "󰠅 "
disabled = false

[azure.subscription_aliases]
s165-teachingqualificationsservice-development = "s165-dev"
s165-teachingqualificationsservice-test = "s165-test"
s165-teachingqualificationsservice-production = "s165-prod"
s189-teacher-services-cloud-development = "s189-dev"
s189-teacher-services-cloud-test = "s189-test"
s189-teacher-services-cloud-production = "s189-prod"

[gcloud]
style = "bold #FFAC31"
format = "on[ ☁️ $account(@$domain) ($project)]($style)"

[os]
disabled = false
style = "bg:os fg:text_color"

[os.symbols]
Alpine = " "
Amazon = " "
Android = " "
Arch = " "
CentOS = " "
Debian = " "
DragonFly = " "
Emscripten = " "
EndeavourOS = " "
Fedora = " "
FreeBSD = " "
Gentoo = " "
Linux = " "
Macos = " "
Manjaro = " "
Mariner = " "
MidnightBSD = " "
Mint = " "
NetBSD = " "
NixOS = " "
openSUSE = " "
Pop = " "
Raspbian = " "
Redhat = " "
RedHatEnterprise = " "
Redox = " "
SUSE = " "
Ubuntu = " "
Unknown = " "
Windows = " "
Satellite = "s"
Alien = ""
Noodles = "��"
Radioactive = ""
